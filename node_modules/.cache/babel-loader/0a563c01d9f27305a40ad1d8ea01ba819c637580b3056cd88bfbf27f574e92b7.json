{"ast":null,"code":"// import {ADD_NOTE, DELETE_NOTE} from \"../actions/noteActions\";\n\nconst {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  notes: [{\n    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam',\n    createdOn: new Date().toDateString()\n  }, {\n    text: 'Aliquam erat volutpat. Ut tincidunt, velit vel aliquam commodo, tellus urna auctor tortor, non ultrices libero ante sed magna.',\n    createdOn: new Date().toDateString()\n  }]\n};\nconst noteSlice = createSlice({\n  name: 'note',\n  initialState: initialState,\n  reducers: {\n    // this is add action\n    add: (state, action) => {\n      state.notes.push({\n        text: action.payload,\n        createdOn: new Date().toDateString()\n      });\n    },\n    delete: (state, action) => {\n      state.notes.splice(action.payload, 1);\n    }\n  }\n});\nexport const noteReducer = noteSlice.reducer;\nexport const actions = noteSlice.actions;\n\n// selector\n\nexport const noteSelector = state => state.noteReducer.notes;\n\n// export function noteReducer(state=initialState, action){\n//     switch(action.type){\n//         case ADD_NOTE:\n//             return {\n//                 ...state,\n//                 notes:[\n//                     ...state.notes,\n//                     {\n//                         text:action.text,\n//                         createdOn: new Date()\n//                     }\n//                 ]\n//             }\n//         case DELETE_NOTE:\n//             state.notes.splice(action.index,1);\n//             console.log(state.notes);\n//             return{\n//                 ...state,\n//                 notes: [...state.notes]\n//             }\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"names":["createSlice","require","initialState","notes","text","createdOn","Date","toDateString","noteSlice","name","reducers","add","state","action","push","payload","delete","splice","noteReducer","reducer","actions","noteSelector"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/Redux_Toolkit_Template/todo/src/redux/reducers/noteReducer.js"],"sourcesContent":["\n// import {ADD_NOTE, DELETE_NOTE} from \"../actions/noteActions\";\n\nconst { createSlice } = require(\"@reduxjs/toolkit\");\n\n\nconst initialState={\n    notes:[{text:'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam'\n    , createdOn: new Date().toDateString()},\n    {text:'Aliquam erat volutpat. Ut tincidunt, velit vel aliquam commodo, tellus urna auctor tortor, non ultrices libero ante sed magna.'\n    , createdOn: new Date().toDateString()}]\n};\n\n\nconst noteSlice = createSlice({\n    name:'note',\n    initialState:initialState,\n    reducers:{\n        // this is add action\n        add:(state, action)=>{\n                state.notes.push({\n                    text:action.payload,\n                    createdOn: new Date().toDateString()\n                })\n        },\n        delete:(state, action)=>{\n            state.notes.splice(action.payload,1);\n        }\n    }\n});\n\nexport const noteReducer=noteSlice.reducer;\nexport const actions = noteSlice.actions;\n\n// selector\n\nexport const noteSelector = (state)=>state.noteReducer.notes;\n\n\n// export function noteReducer(state=initialState, action){\n//     switch(action.type){\n//         case ADD_NOTE:\n//             return {\n//                 ...state,\n//                 notes:[\n//                     ...state.notes,\n//                     {\n//                         text:action.text,\n//                         createdOn: new Date()\n//                     }\n//                 ]\n//             }\n//         case DELETE_NOTE:\n//             state.notes.splice(action.index,1);\n//             console.log(state.notes);\n//             return{\n//                 ...state,\n//                 notes: [...state.notes]\n//             }\n//         default:\n//             return state;\n//     }\n// }"],"mappings":"AACA;;AAEA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAGnD,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC,CAAC;IAACC,IAAI,EAAC,0HAA0H;IACrIC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,YAAY;EAAE,CAAC,EACvC;IAACH,IAAI,EAAC,gIAAgI;IACpIC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,YAAY;EAAE,CAAC;AAC3C,CAAC;AAGD,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAC,MAAM;EACXP,YAAY,EAACA,YAAY;EACzBQ,QAAQ,EAAC;IACL;IACAC,GAAG,EAAC,CAACC,KAAK,EAAEC,MAAM,KAAG;MACbD,KAAK,CAACT,KAAK,CAACW,IAAI,CAAC;QACbV,IAAI,EAACS,MAAM,CAACE,OAAO;QACnBV,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,YAAY;MACtC,CAAC,CAAC;IACV,CAAC;IACDS,MAAM,EAAC,CAACJ,KAAK,EAAEC,MAAM,KAAG;MACpBD,KAAK,CAACT,KAAK,CAACc,MAAM,CAACJ,MAAM,CAACE,OAAO,EAAC,CAAC,CAAC;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAACV,SAAS,CAACW,OAAO;AAC1C,OAAO,MAAMC,OAAO,GAAGZ,SAAS,CAACY,OAAO;;AAExC;;AAEA,OAAO,MAAMC,YAAY,GAAIT,KAAK,IAAGA,KAAK,CAACM,WAAW,CAACf,KAAK;;AAG5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}