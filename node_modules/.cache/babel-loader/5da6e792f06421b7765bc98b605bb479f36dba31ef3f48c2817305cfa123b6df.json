{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { actions } from './todoReducer';\nconst initialState = {\n  message: \"\"\n};\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    reset: (state, action) => {\n      state.message = \"\";\n    }\n  },\n  // extraReducers:{\n  //     \"todo/add\":(state, action)=>{\n  //       state.message=\"Todo is created\";  \n  //     }\n  // }\n  // extraReducers:(builder)=>{\n  //     builder.addCase(actions.add, (state, action)=>{\n  //         state.message=\"Todo is created\";\n  //     })\n  // }\n  extraReducers: {\n    // map objects: [key]: value\n    [actions.add]: (state, action) => {\n      state.message = \"Todo is created\";\n    }\n  }\n});\nexport const notificationReducer = notificationSlice.reducer;\nexport const resetNotification = notificationSlice.actions.reset;\nexport const notificationSelector = state => state.notificationReducer.message;","map":{"version":3,"names":["createSlice","actions","initialState","message","notificationSlice","name","reducers","reset","state","action","extraReducers","add","notificationReducer","reducer","resetNotification","notificationSelector"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/Redux_Toolkit_Template/todo/src/redux/reducers/notificationReducer.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {actions} from './todoReducer'\n\nconst initialState={\n    message:\"\"\n}\n\nconst notificationSlice = createSlice({\n    name:'notification',\n    initialState,\n    reducers:{\n        reset: (state, action)=>{\n            state.message=\"\";\n        }\n    },\n    // extraReducers:{\n    //     \"todo/add\":(state, action)=>{\n    //       state.message=\"Todo is created\";  \n    //     }\n    // }\n    // extraReducers:(builder)=>{\n    //     builder.addCase(actions.add, (state, action)=>{\n    //         state.message=\"Todo is created\";\n    //     })\n    // }\n    extraReducers:{\n        // map objects: [key]: value\n        [actions.add]: (state, action)=>{\n            state.message=\"Todo is created\";  \n        }\n    }\n});\n\nexport const notificationReducer = notificationSlice.reducer;\n\nexport const resetNotification = notificationSlice.actions.reset;\n\nexport const notificationSelector = (state)=>state.notificationReducer.message;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,OAAO,QAAO,eAAe;AAErC,MAAMC,YAAY,GAAC;EACfC,OAAO,EAAC;AACZ,CAAC;AAED,MAAMC,iBAAiB,GAAGJ,WAAW,CAAC;EAClCK,IAAI,EAAC,cAAc;EACnBH,YAAY;EACZI,QAAQ,EAAC;IACLC,KAAK,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MACpBD,KAAK,CAACL,OAAO,GAAC,EAAE;IACpB;EACJ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAO,aAAa,EAAC;IACV;IACA,CAACT,OAAO,CAACU,GAAG,GAAG,CAACH,KAAK,EAAEC,MAAM,KAAG;MAC5BD,KAAK,CAACL,OAAO,GAAC,iBAAiB;IACnC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,mBAAmB,GAAGR,iBAAiB,CAACS,OAAO;AAE5D,OAAO,MAAMC,iBAAiB,GAAGV,iBAAiB,CAACH,OAAO,CAACM,KAAK;AAEhE,OAAO,MAAMQ,oBAAoB,GAAIP,KAAK,IAAGA,KAAK,CAACI,mBAAmB,CAACT,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}