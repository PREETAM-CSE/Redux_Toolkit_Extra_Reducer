{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PreetamKumar\\\\Desktop\\\\javascript\\\\React\\\\Redux_Toolkit_Template\\\\todo\\\\src\\\\components\\\\ToDoForm\\\\ToDoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import {addTodo} from \"../../redux/actions/todoActions\";\nimport { actions } from \"../../redux/reducers/todoReducer\";\nimport styles from \"./ToDoForm.module.css\";\nimport { notificationSelector, resetNotification } from \"../../redux/reducers/notificationReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoForm() {\n  _s();\n  const [todoText, setTodoText] = useState(\"\");\n  const dispatch = useDispatch();\n  const message = useSelector(notificationSelector);\n  if (message) {\n    setTimeout(() => {\n      dispatch(resetNotification());\n    }, 3000);\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTodoText(\"\");\n    dispatch(actions.add(todoText));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"alert alert-success\",\n      role: \"alert\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mb-3\",\n        value: todoText,\n        onChange: e => setTodoText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success float-end\",\n        type: \"submit\",\n        children: \"Create Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoForm, \"/IMokZBakeEXgcKXaH5fuqjoFI8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ToDoForm;\nexport default ToDoForm;\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","actions","styles","notificationSelector","resetNotification","ToDoForm","todoText","setTodoText","dispatch","message","setTimeout","handleSubmit","e","preventDefault","add","container","target","value"],"sources":["C:/Users/PreetamKumar/Desktop/javascript/React/Redux_Toolkit_Template/todo/src/components/ToDoForm/ToDoForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import {addTodo} from \"../../redux/actions/todoActions\";\nimport { actions } from \"../../redux/reducers/todoReducer\";\n\nimport styles from \"./ToDoForm.module.css\";\nimport { notificationSelector, resetNotification } from \"../../redux/reducers/notificationReducer\";\n\nfunction ToDoForm() {\n  const [todoText, setTodoText] = useState(\"\");\n  const dispatch = useDispatch();\n  const message = useSelector(notificationSelector)\n  \n  if(message){\n    setTimeout(()=>{\n      dispatch(resetNotification());\n    }, 3000);\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    setTodoText(\"\");\n    dispatch(actions.add(todoText));\n  };\n\n  return (\n    <div className={styles.container}>\n      {\n        message && \n        <div class=\"alert alert-success\" role=\"alert\">\n          {message}\n        </div>\n      }\n     \n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control mb-3\"\n        value={todoText}\n        onChange={(e) => setTodoText(e.target.value)}\n      />\n      <button className=\"btn btn-success float-end\" type=\"submit\">Create Todo</button>\n    </form>\n    </div>\n  );\n}\n\nexport default ToDoForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,OAAO,QAAQ,kCAAkC;AAE1D,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,oBAAoB,EAAEC,iBAAiB,QAAQ,0CAA0C;AAAC;AAEnG,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,OAAO,GAAGT,WAAW,CAACG,oBAAoB,CAAC;EAEjD,IAAGM,OAAO,EAAC;IACTC,UAAU,CAAC,MAAI;MACbF,QAAQ,CAACJ,iBAAiB,EAAE,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,MAAMO,YAAY,GAAIC,CAAC,IAAI;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClBN,WAAW,CAAC,EAAE,CAAC;IACfC,QAAQ,CAACP,OAAO,CAACa,GAAG,CAACR,QAAQ,CAAC,CAAC;EACjC,CAAC;EAED,oBACE;IAAK,SAAS,EAAEJ,MAAM,CAACa,SAAU;IAAA,WAE7BN,OAAO,iBACP;MAAK,KAAK,EAAC,qBAAqB;MAAC,IAAI,EAAC,OAAO;MAAA,UAC1CA;IAAO;MAAA;MAAA;MAAA;IAAA,QACJ,eAGV;MAAM,QAAQ,EAAEE,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,mBAAmB;QAC7B,KAAK,EAAEL,QAAS;QAChB,QAAQ,EAAGM,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACI,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eACF;QAAQ,SAAS,EAAC,2BAA2B;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3E;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GArCQZ,QAAQ;EAAA,QAEEN,WAAW,EACZC,WAAW;AAAA;AAAA,KAHpBK,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}